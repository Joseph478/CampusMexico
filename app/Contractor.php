<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Spatie\Permission\Traits\HasRoles;

/**
 * App\Contractor
 *
 * @property int $id
 * @property string|null $dni
 * @property string $name
 * @property string|null $position
 * @property string|null $area
 * @property string $email
 * @property string $password
 * @property string|null $avatar
 * @property string|null $phone
 * @property string|null $last_login
 * @property string $state
 * @property \Illuminate\Support\Carbon|null $email_verified_at
 * @property string|null $remember_token
 * @property \Illuminate\Support\Carbon|null $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Company[] $companies
 * @property-read int|null $companies_count
 * @property-read \Illuminate\Notifications\DatabaseNotificationCollection|\Illuminate\Notifications\DatabaseNotification[] $notifications
 * @property-read int|null $notifications_count
 * @property-read \Illuminate\Database\Eloquent\Collection|\Spatie\Permission\Models\Permission[] $permissions
 * @property-read int|null $permissions_count
 * @property-read \Illuminate\Database\Eloquent\Collection|\Spatie\Permission\Models\Role[] $roles
 * @property-read int|null $roles_count
 * @method static \Illuminate\Database\Eloquent\Builder|\App\User active()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\User permission($permissions)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor query()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\User role($roles, $guard = null)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor whereArea($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor whereAvatar($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor whereDni($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor whereEmail($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor whereEmailVerifiedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor whereLastLogin($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor whereName($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor wherePassword($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor wherePhone($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor wherePosition($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor whereRememberToken($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor whereState($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Contractor whereUpdatedAt($value)
 * @mixin \Eloquent
 * @property-read mixed $full_name
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Classroom[] $classrooms
 * @property-read int|null $classrooms_count
 */
class Contractor extends User
{
    use HasRoles;
    protected $table = 'users';

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::addGlobalScope(function ($query) {
            $query->role('contratista');
        });
    }
}
